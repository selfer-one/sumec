# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]
env:
  IMAGE_NAME: sumec
jobs:
  build-and-test:

    runs-on: ubuntu-latest
    steps:
    - name: Repository checkout
      uses: actions/checkout@v4
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run unit test
      run: |
        python test.py && zip balicek.zip main.py
    - name: Setup docker build
      uses: docker/setup-buildx-action@v3
    - name: Build docker image
      run: |
        echo "Building docker image..."
        docker build -t \${{ env.IMAGE_NAME }}:latest .
        docker build -t \${{ env.IMAGE_NAME }}:\${{ github.sha }} .
    - name: Test container
      run: |
        docker run --rm \${{ env.IMAGE_NAME }}:latest
    - name: List images
      run: |
        docker images | grep \${{ env.IMAGE_NAME }}
